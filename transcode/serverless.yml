#组件信息 全量配置参考https://github.com/serverless-components/tencent-scf/blob/master/docs/configure.md
component: scf #引用 component 的名称
name: transcode-video #创建的实例名称，请修改成您的实例名称

#组件参数
inputs:
  name: transcode-app
  src: ./src
  handler: index.main_handler 
#  role: transcodeRole # 函数执行角色，已授予cos对应桶全读写权限
  runtime: Python3.6
  memorySize: 3072 # 内存大小，单位MB
  timeout: 43200 # 函数执行超时时间, 单位秒, 即本demo目前最大支持12h运行时长
  region: ${env:REGION} # 函数区域，统一在环境变量中定义
  asyncRunEnable: true # 开启长时运行
#  cls: # 函数日志
#    logsetId: ${output:${stage}:${app}:cls-video.logsetId}  # cls日志集 cls-video为cls组件的实例名称
#    topicId: ${output:${stage}:${app}:cls-video.topicId}  # cls日志主题
  environment:
    variables:  # 转码参数
      REGION: ${env:REGION} # 输出桶区域
      TENCENT_SECRET_ID: ${env:TENCENT_SECRET_ID}
      TENCENT_SECRET_KEY: ${env:TENCENT_SECRET_KEY}
      DST_BUCKET: ${env:OUTPUT_BUCKET} # 输出桶名称
      DST_PATH: ${env:OUTPUT_PATH} # 输出桶路径
#      DST_FORMAT: avi # 转码生成格式
#      FFMPEG_CMD: ffmpeg -i {input} -y -f {dst_format} {output}  # 转码基础命令，您可自定义配置，但必须包含ffmpeg配置参数和格式化部分，否则会造成转码任务失败。
      DST_FORMAT: mp4
      FFMPEG_CMD: ffmpeg -i {input} -vcodec copy -y -f {dst_format} -movflags frag_keyframe+empty_moov {output}
      FFMPEG_DEBUG: 1 # 是否输出ffmpeg日志 0为不输出 1为输出
      TZ: Asia/Shanghai # cls日志输出时间的时区
  events:
    - cos: # cos触发器
        parameters:
          bucket: ${env:INPUT_BUCKET}.cos.${env:REGION}.myqcloud.com  # 输入文件桶
          filter:
            prefix: ${env:INPUT_PATH}  # 桶内路径
          events: 'cos:ObjectCreated:*'  # 触发事件
          enable: true
